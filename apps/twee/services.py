import tweepyclass TweepyService:    def __init__(self, consumer_key: str, consumer_secret: str, access_token: str, access_token_secret: str) -> None:        self._consumer_key = consumer_key        self._consumer_secret = consumer_secret        self._access_token = access_token        self._access_token_secret = access_token_secret    def __authenticated_user(self):        auth = tweepy.OAuthHandler(self._consumer_key, self._consumer_secret)        auth.set_access_token(self._access_token, self._access_token_secret)        return tweepy.API(auth, retry_count=6)    @property    def get_user(self):        return self.__authenticated_user()    def get_user_tweets(self, user_handle: str, tweet_counts: int = None):        user = self.__authenticated_user()        if tweet_counts is not None:            return tweepy.Cursor(                user.user_timeline,                id=user_handle,                tweet_mode='extended'            ).items(tweet_counts)        return tweepy.Cursor(            user.user_timeline,            id=user_handle,            tweet_mode='extended'        ).items()